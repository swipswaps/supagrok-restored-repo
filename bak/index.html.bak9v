<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Supagrok Gaze Overlay</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      background: black;
      overflow: hidden;
      color: white;
      font-family: monospace;
      height: 100%;
      width: 100%;
    }
    #overlay {
      position: fixed;
      top: 0; left: 0;
      z-index: 100;
      pointer-events: none;
    }
    #statusLog {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: black;
      color: lime;
      padding: 5px;
      font-size: 14px;
      z-index: 200;
    }
    .status-ok::before    { content: "‚úÖ "; color: lime; }
    .status-warn::before  { content: "‚ö† "; color: yellow; }
    .status-err::before   { content: "‚ùå "; color: red; }
    .status-info::before  { content: "üß† "; color: pink; }
    .status-trace::before { content: "üìç "; color: cyan; }

    #webgazerGazeDot {
      position: fixed;
      z-index: 99999;
      left: -5px;
      top: -5px;
      background: red;
      border-radius: 100%;
      opacity: 0.7;
      width: 10px;
      height: 10px;
    }
    #calibModal {
      position: fixed;
      top: 10%;
      left: 50%;
      transform: translateX(-50%);
      background: black;
      color: white;
      border: 3px solid lime;
      padding: 20px;
      z-index: 300;
      display: none;
    }
    .calib-button {
      margin: 5px;
      padding: 10px;
      font-size: 18px;
      background: #222;
      color: white;
      border: 2px solid #ccc;
      cursor: pointer;
    }
  </style>
</head>
<body>
<canvas id="overlay" width="640" height="480"></canvas>
<div id="statusLog" class="status-log"></div>
<div id="webgazerGazeDot"></div>

<div id="calibModal">
  <div><b>Calibration Options</b></div>
  <button class="calib-button" onclick="setMode(1)">Mode 1 (Haar Eye)</button>
  <button class="calib-button" onclick="setMode(2)">Mode 2 (DNN Face)</button>
  <button class="calib-button" onclick="setMode(3)">Mode 3 (Facial Mesh)</button>
  <button class="calib-button" onclick="closeCalib()">Close</button>
</div>

<script src="https://webgazer.cs.brown.edu/webgazer.js"></script>
<script>
let ws, mode = "auto";
let trail = [];
let ctx = document.getElementById("overlay").getContext("2d");
let smoothed = {x: 0, y: 0};

function logStatus(text, type = "info") {
  const div = document.createElement("div");
  div.textContent = text;
  div.className = `status-${type}`;
  document.getElementById("statusLog").appendChild(div);
}

function drawTrail() {
  const now = Date.now();
  ctx.clearRect(0, 0, 640, 480);
  for (let p of trail.filter(p => now - p.t < 3000)) {
    let alpha = 1 - (now - p.t) / 3000;
    ctx.beginPath();
    ctx.arc(p.x, p.y, 6, 0, 2 * Math.PI);
    ctx.fillStyle = `rgba(0,255,0,${alpha})`;
    ctx.fill();
  }
}

function connectWebSocket() {
  try {
    ws = new WebSocket("ws://localhost:8765");
    ws.onopen = () => logStatus("WebSocket connected", "ok");
    ws.onerror = () => logStatus("WS error: undefined", "err");
  } catch (e) {
    logStatus("WebSocket setup failed: " + e.message, "err");
  }
}

function setMode(m) {
  mode = m;
  logStatus("Switched to Mode " + m, "trace");
  closeCalib();
}

function closeCalib() {
  document.getElementById("calibModal").style.display = "none";
  logStatus("Calibration window closed.", "ok");
}

function autoInit() {
  document.getElementById("calibModal").style.display = "none";
  logStatus("Waiting for events...", "trace");
  connectWebSocket();
  webgazer.setGazeListener(data => {
    if (!data) return;
    smoothed.x = 0.85 * smoothed.x + 0.15 * data.x;
    smoothed.y = 0.85 * smoothed.y + 0.15 * data.y;
    trail.push({x: smoothed.x, y: smoothed.y, t: Date.now()});
    drawTrail();
  }).begin().then(() => {
    logStatus("WebGazer loaded.", "info");
  }).catch(e => logStatus("WebGazer failed: " + e.message, "err"));
}

document.addEventListener("DOMContentLoaded", autoInit);
</script>
</body>
</html>
